{"version":3,"file":"static/js/278.b07b1e99.chunk.js","mappings":"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","sources":["service/serviceApi.jsx","components/tweets/tweets.jsx","pages/cards/cards.jsx"],"sourcesContent":["import axios from \"axios\"\n\nconst API = 'https://644218c576540ce22584450b.mockapi.io'\n\nasync function getTweets(){\n try {\n    const {data} = await axios.get(`${API}/users`)\n    return data\n } catch (error) {\n    console.log(error);\n }\n}\n\nasync function putTweets(id, tweets){\n\n   try {\n      const {data} = await axios.put(`${API}/users/${id}`, tweets)\n      return data\n   } catch (error) {\n      console.log(error);\n   }\n  }\n\n\nexport {getTweets, putTweets}","import \"./tweets.css\";\nimport messageImg from \"../../img/pictureMessage.png\";\nimport avatar from \"../../img/avatar.png\";\nimport logo from \"../../img/Logo.png\";\nimport { putTweets } from \"../../service/serviceApi\";\nimport { useState } from \"react\";\n\nconst Tweets = ({ props }) => {\n  const [dataTweets, setTweets] = useState(props.followers);\n  const [folow, setFolow] = useState(props.following);\n\n  const following = (prop) => {\n    if (folow) {\n      setFolow(false);\n      setTweets((prev) => prev - 1);\n      putTweets(prop.id, { following: false, followers: props.followers - 1 });\n    } else {\n      setFolow(true);\n      setTweets((prev) => prev + 1);\n      putTweets(prop.id, { following: true, followers: props.followers + 1 });\n    }\n  };\n\n  return (\n    <li className=\"card\">\n      <div className=\"card__Avatar\">\n        <img className=\"goit__Span\" src={logo} alt=\"logo\" />\n        <div className=\"card__messageImg\">\n          <img src={messageImg} alt=\"\" />\n        </div>\n        <div className=\"avatar\">\n          <img src={props.avatar || avatar} alt=\"\" width={62} />\n        </div>\n      </div>\n      <div className=\"card__Tweets\">\n        <p>\n          <span>{props.tweets}</span> TWEETS\n        </p>\n        <p>\n          <span>{new Intl.NumberFormat(\"en-IN\").format(dataTweets)} </span>\n          FOLLOWERS\n        </p>\n      </div>\n      <div className=\"card__btn\">\n        {folow ? (\n          <button\n            className={\"btn is-active btn\"}\n            onClick={() => following(props)}\n          >\n            FOLLOWING\n          </button>\n        ) : (\n          <button className={\"btn\"} onClick={() => following(props)}>\n            FOLLOW\n          </button>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default Tweets;\n","import { useEffect, useState } from \"react\";\nimport { getTweets } from \"../../service/serviceApi\";\nimport Tweets from \"../../components/tweets/tweets\";\nimport \"./cards.css\";\nimport { Link } from \"react-router-dom\";\nimport { ColorRing } from \"react-loader-spinner\";\n\nlet numCards = 3;\n\nconst Cards = () => {\n  const [dataTweets, setTweets] = useState([]);\n  const [pageTweets, setPageTweets] = useState([]);\n  const [filtr, setFiltr] = useState(true);\n\n  const addMore = () => {\n    if (pageTweets.length < dataTweets.length) {\n      numCards += 3;\n      setPageTweets(dataTweets.slice(0, numCards));\n    }\n    if (dataTweets.length <= pageTweets.length + 1) {\n      setFiltr(false);\n    }\n  };\n\n  useEffect(() => {\n    getTweets().then((data) => setTweets(data));\n  }, []);\n\n  useEffect(() => {\n    if (dataTweets.length > 0) {\n      setPageTweets(dataTweets.slice(0, numCards));\n    }\n  }, [dataTweets]);\n\n  const filter = (e) => {\n    switch (e.target.value) {\n      case \"follow\":\n        setPageTweets(dataTweets.filter((tweets) => !tweets.following));\n        setFiltr(false);\n        break;\n      case \"followings\":\n        setPageTweets(dataTweets.filter((tweets) => tweets.following));\n        setFiltr(false);\n        break;\n      case \"all\":\n        setPageTweets(dataTweets);\n        setFiltr(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return dataTweets.length <= 0 ? (\n    <div className=\"loader\">\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\n      />\n    </div>\n  ) : (\n    <section className=\"section\">\n      <div className=\"section__btn--back\">\n        <Link to=\"/\" className=\"goBack\">\n          Back\n        </Link>\n        <div>\n          <label className=\"filtr\">\n            Fiter Cards\n            <select id=\"folow\" onChange={filter}>\n              <option value=\"all\">all</option>\n              <option value=\"follow\">follow</option>\n              <option value=\"followings\">followings</option>\n            </select>\n          </label>\n        </div>\n      </div>\n      <ul className=\"cards\">\n        {pageTweets.length > 0 ? (\n          pageTweets.map((tweets) => <Tweets props={tweets} key={tweets.id} />)\n        ) : (\n          <li></li>\n        )}\n      </ul>\n      <div className=\"addMore\">\n        {\n          <button onClick={addMore} className={filtr ? \"addMoreBtn\" : \"none\"}>\n            Add More\n          </button>\n        }\n      </div>\n    </section>\n  );\n};\n// e\nexport default Cards;\n"],"names":["API","_getTweets","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","concat","sent","abrupt","t0","console","log","stop","apply","arguments","putTweets","_x","_x2","_putTweets","_callee2","id","tweets","_yield$axios$put","_context2","_ref","props","_useState","useState","followers","_useState2","_slicedToArray","dataTweets","setTweets","_useState3","following","_useState4","folow","setFolow","prop","_jsxs","className","children","_jsx","src","alt","messageImg","avatar","width","Intl","NumberFormat","format","onClick","numCards","pageTweets","setPageTweets","_useState5","_useState6","filtr","setFiltr","useEffect","getTweets","then","length","slice","ColorRing","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","Link","to","onChange","e","target","value","filter","map","Tweets"],"sourceRoot":""}